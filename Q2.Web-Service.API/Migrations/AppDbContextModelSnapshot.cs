// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Q2.Web_Service.API.Shared.Infrastructure.Persistence.EFC.Configuration;

#nullable disable

namespace Q2.Web_Service.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Q2.Web_Service.API.DesignLab.Domain.Model.Aggregates.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Color")
                        .HasColumnType("integer")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("Gender")
                        .HasColumnType("integer")
                        .HasColumnName("gender");

                    b.Property<string>("PreviewUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("preview_url");

                    b.Property<int>("Size")
                        .HasColumnType("integer")
                        .HasColumnName("size");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("p_k_projects");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("Q2.Web_Service.API.DesignLab.Domain.Model.Entities.Layer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("boolean")
                        .HasColumnName("is_visible");

                    b.Property<int>("LayerType")
                        .HasColumnType("integer")
                        .HasColumnName("layer_type");

                    b.Property<float>("Opacity")
                        .HasColumnType("real")
                        .HasColumnName("opacity");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("project_id");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("X")
                        .HasColumnType("integer")
                        .HasColumnName("x");

                    b.Property<int>("Y")
                        .HasColumnType("integer")
                        .HasColumnName("y");

                    b.Property<int>("Z")
                        .HasColumnType("integer")
                        .HasColumnName("z");

                    b.HasKey("Id")
                        .HasName("p_k_layers");

                    b.HasIndex("ProjectId")
                        .HasDatabaseName("i_x_layers_project_id");

                    b.ToTable("layers");
                });

            modelBuilder.Entity("Quri.Teelab.Api.Teelab.Analytics.Domain.Model.Entities.CustomerAnalytics", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Blueprints")
                        .HasColumnType("integer")
                        .HasColumnName("blueprints");

                    b.Property<int>("Completed")
                        .HasColumnType("integer")
                        .HasColumnName("completed");

                    b.Property<int>("DesignedGarments")
                        .HasColumnType("integer")
                        .HasColumnName("designed_garments");

                    b.Property<int>("TotalProjects")
                        .HasColumnType("integer")
                        .HasColumnName("total_projects");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("p_k_customer_analytics");

                    b.ToTable("customer_analytics");
                });

            modelBuilder.Entity("Q2.Web_Service.API.DesignLab.Domain.Model.Entities.Layer", b =>
                {
                    b.HasOne("Q2.Web_Service.API.DesignLab.Domain.Model.Aggregates.Project", null)
                        .WithMany("Layers")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_layers_projects_project_id");
                });

            modelBuilder.Entity("Q2.Web_Service.API.DesignLab.Domain.Model.Aggregates.Project", b =>
                {
                    b.Navigation("Layers");
                });
#pragma warning restore 612, 618
        }
    }
}
